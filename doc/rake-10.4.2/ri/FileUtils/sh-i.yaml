--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Run the system command <tt>cmd</tt>. If multiple arguments are given the command is run directly (without the shell, same semantics as Kernel::exec and Kernel::system).
- !ruby/struct:SM::Flow::P 
  body: "It is recommended you use the multiple argument form over interpolating user input for both usability and security reasons. With the multiple argument form you can easily process files with spaces or other shell reserved characters in them. With the multiple argument form your rake tasks are not vulnerable to users providing an argument like <tt>; rm # -rf /</tt>."
- !ruby/struct:SM::Flow::P 
  body: If a block is given, upon command completion the block is called with an OK flag (true on a zero exit status) and a Process::Status object. Without a block a RuntimeError is raised when the command exits non-zero.
- !ruby/struct:SM::Flow::P 
  body: "Examples:"
- !ruby/struct:SM::Flow::VERB 
  body: "  sh 'ls -ltr'\n\n  sh 'ls', 'file with spaces'\n\n  # check exit status after command runs\n  sh %{grep pattern file} do |ok, res|\n    if ! ok\n      puts &quot;pattern not found (status = #{res.exitstatus})&quot;\n    end\n  end\n"
full_name: FileUtils#sh
is_singleton: false
name: sh
params: (*cmd, &block)
visibility: public
