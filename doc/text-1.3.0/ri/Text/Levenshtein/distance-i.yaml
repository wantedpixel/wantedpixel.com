--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Calculate the Levenshtein distance between two strings +str1+ and +str2+.
- !ruby/struct:SM::Flow::P 
  body: The optional argument max_distance can reduce the number of iterations by stopping if the Levenshtein distance exceeds this value. This increases performance where it is only necessary to compare the distance with a reference value instead of calculating the exact distance.
- !ruby/struct:SM::Flow::P 
  body: "The distance is calculated in terms of Unicode codepoints. Be aware that this algorithm does not perform normalisation: if there is a possibility of different normalised forms being used, normalisation should be performed beforehand."
full_name: Text::Levenshtein#distance
is_singleton: false
name: distance
params: (str1, str2, max_distance = nil)
visibility: public
