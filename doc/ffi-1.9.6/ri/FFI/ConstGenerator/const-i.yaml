--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Request the value for C constant <tt>name</tt>.
- !ruby/struct:SM::Flow::P 
  body: "@param [#to_s] name C constant name @param [String] format a printf format string to print the value out @param [String] cast a C cast for the value @param ruby_name alternate ruby name for {#to_ruby}"
- !ruby/struct:SM::Flow::P 
  body: "@overload const(name, format=nil, cast='', ruby_name=nil, converter=nil)"
- !ruby/struct:SM::Flow::VERB 
  body: " <tt>converter</tt> is a Method or a Proc.\n @param [#call] converter convert the value from a string to the appropriate\n  type for {#to_ruby}.\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload const(name, format=nil, cast='', ruby_name=nil) { |value| ... }"
- !ruby/struct:SM::Flow::VERB 
  body: " Use a converter block. This block convert the value from a string to the\n appropriate type for {#to_ruby}.\n @yieldparam value constant value\n"
full_name: FFI::ConstGenerator#const
is_singleton: false
name: const
params: (name, format = nil, cast = '', ruby_name = nil, converter = nil, &converter_proc)
visibility: public
